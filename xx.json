[{"elements": [{"steps": [{"line": 26, "match": {"location": ""}, "name": "I am on the zoo website", "keyword": "Given", "result": {"status": "passed", "duration": 1494662046}}, {"line": 27, "match": {"location": ""}, "name": "I navigate to <xx_link>", "keyword": "When", "result": {"status": "passed", "duration": 1218969106}}, {"line": 28, "match": {"location": ""}, "name": "I check page title is \"<xx>\"", "keyword": "Then", "result": {"status": "passed", "duration": 12022972}}, {"line": 29, "match": {"location": ""}, "name": "I close the browser", "keyword": "And", "result": {"status": "passed", "duration": 106093883}}], "name": "Check page title for XX page", "keyword": "Scenario", "tags": [], "line": 25, "type": "scenario", "id": "test_check_page_title_for_adoption_page[adoption_link-Adoption]", "description": ""}, {"steps": [{"line": 26, "match": {"location": ""}, "name": "I am on the zoo website", "keyword": "Given", "result": {"status": "passed", "duration": 1566111087}}, {"line": 27, "match": {"location": ""}, "name": "I navigate to <xx_link>", "keyword": "When", "result": {"status": "passed", "duration": 943754911}}, {"line": 28, "match": {"location": ""}, "name": "I check page title is \"<xx>\"", "keyword": "Then", "result": {"status": "passed", "duration": 102524995}}, {"line": 29, "match": {"location": ""}, "name": "I close the browser", "keyword": "And", "result": {"status": "passed", "duration": 159183025}}], "name": "Check page title for XX page", "keyword": "Scenario", "tags": [], "line": 25, "type": "scenario", "id": "test_check_page_title_for_adoption_page[about_link-About]", "description": ""}, {"steps": [{"line": 26, "match": {"location": ""}, "name": "I am on the zoo website", "keyword": "Given", "result": {"status": "passed", "duration": 1536895036}}, {"line": 27, "match": {"location": ""}, "name": "I navigate to <xx_link>", "keyword": "When", "result": {"status": "passed", "duration": 1247699022}}, {"line": 28, "match": {"location": ""}, "name": "I check page title is \"<xx>\"", "keyword": "Then", "result": {"status": "passed", "duration": 66725969}}, {"line": 29, "match": {"location": ""}, "name": "I close the browser", "keyword": "And", "result": {"status": "passed", "duration": 106585025}}], "name": "Check page title for XX page", "keyword": "Scenario", "tags": [], "line": 25, "type": "scenario", "id": "test_check_page_title_for_adoption_page[contact_link-Contact]", "description": ""}], "name": "Check the page title", "keyword": "Feature", "tags": [{"line": 22, "name": "pagetitle"}], "line": 23, "description": "", "uri": "pbt/PageTitle.feature", "id": "pbt/pagetitle.feature"}, {"elements": [{"steps": [{"line": 5, "match": {"location": ""}, "name": "I navigate to the zoo website", "keyword": "Given", "result": {"status": "passed", "duration": 205039}}, {"line": 6, "match": {"location": ""}, "name": "I click on the check button", "keyword": "When", "result": {"status": "passed", "duration": 65088}}, {"line": 7, "match": {"location": ""}, "name": "I check to see that no animals are available", "keyword": "Then", "result": {"status": "passed", "duration": 61035}}], "name": "My first test", "keyword": "Scenario", "tags": [], "line": 4, "type": "scenario", "id": "test_my_first_test", "description": ""}], "name": "Proof of concept that my framework works", "keyword": "Feature", "tags": [{"line": 2, "name": "feature"}, {"line": 2, "name": "my"}], "line": 3, "description": "", "uri": "pbt/myfeature.feature", "id": "pbt/myfeature.feature"}, {"elements": [{"steps": [{"line": 5, "match": {"location": ""}, "name": "I am on the zoo website", "keyword": "Given", "result": {"status": "passed", "duration": 1528318881}}, {"line": 6, "match": {"location": ""}, "name": "I click the button of contact link", "keyword": "When", "result": {"status": "passed", "duration": 1280632019}}, {"line": 7, "match": {"location": ""}, "name": "populate the contact form", "keyword": "And", "result": {"status": "passed", "duration": 469761848}}, {"line": 8, "match": {"location": ""}, "name": "I should be on the contact confirmation page", "keyword": "Then", "result": {"status": "failed", "duration": 2900838, "error_message": "request = <FixtureRequest for <Function 'test_check_form_is_validated_when_there_are_no_errors'>>\n\n    @scenario('ContactConfirm.feature', 'Check form is validated when there are no errors')\n>   def test_check_form_is_validated_when_there_are_no_errors():\n\ntest_contact_confirm.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python2.7/site-packages/pytest_bdd/scenario.py:195: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n/usr/local/lib/python2.7/site-packages/pytest_bdd/scenario.py:137: in _execute_step_function\n    step_func(**kwargs)\ntest_contact_confirm.py:116: in i_should_be_on_the_contact_confirmation_page\n    assert driver.title == \"Contact Confirmation\"\n/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:277: in title\n    resp = self.execute(Command.GET_TITLE)\n/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:256: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x109465310>\nresponse = {'sessionId': 'f6fc7195fa8f37e2269a11f60cf343bc', 'status': 26, 'value': {'message': 'unexpected alert open: {Alert te... (Driver info: chromedriver=2.26.436421 (6c1a3ab469ad86fd49c8d97ede4a6b96a49ca5f6),platform=Mac OS X 10.12.4 x86_64)'}}\n\n    def check_response(self, response):\n        \"\"\"\n            Checks that a JSON response from the WebDriver does not have an error.\n    \n            :Args:\n             - response - The JSON response from the WebDriver server as a dictionary\n               object.\n    \n            :Raises: If the response contains an error message.\n            \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = WebDriverException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException and 'alert' in value:\n            raise exception_class(message, screen, stacktrace, value['alert'].get('text'))\n>       raise exception_class(message, screen, stacktrace)\nE       UnexpectedAlertPresentException: Alert Text: None\nE       Message: unexpected alert open: {Alert text : Name field is empty}\nE         (Session info: chrome=58.0.3029.81)\nE         (Driver info: chromedriver=2.26.436421 (6c1a3ab469ad86fd49c8d97ede4a6b96a49ca5f6),platform=Mac OS X 10.12.4 x86_64)\n\n/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py:194: UnexpectedAlertPresentException"}}, {"line": 9, "match": {"location": ""}, "name": "I close the browser", "keyword": "And", "result": {"status": "failed", "duration": 953, "error_message": ""}}], "name": "Check form is validated when there are no errors", "keyword": "Scenario", "tags": [], "line": 4, "type": "scenario", "id": "test_check_form_is_validated_when_there_are_no_errors", "description": ""}], "name": "To test contact form works when there are no errors", "keyword": "Feature", "tags": [{"line": 1, "name": "contact_confirm"}], "line": 2, "description": "", "uri": "pbt/ContactConfirm.feature", "id": "pbt/contactconfirm.feature"}, {"elements": [{"steps": [{"line": 11, "match": {"location": ""}, "name": "I am on the zoo website", "keyword": "Given", "result": {"status": "passed", "duration": 1575489044}}, {"line": 12, "match": {"location": ""}, "name": "I navigate to \"contact_link\"", "keyword": "When", "result": {"status": "passed", "duration": 1271459102}}, {"line": 13, "match": {"location": ""}, "name": "I submit the form with valid data", "keyword": "And", "result": {"status": "passed", "duration": 551563024}}, {"line": 15, "match": {"location": ""}, "name": "I check that the form has been subimtted", "keyword": "Then", "result": {"status": "passed", "duration": 620647907}}, {"line": 16, "match": {"location": ""}, "name": "I close the browser", "keyword": "And", "result": {"status": "passed", "duration": 263839006}}], "name": "Submit form using valid data", "keyword": "Scenario", "tags": [], "line": 10, "type": "scenario", "id": "test_submit_form_using_valid_data", "description": ""}], "name": "Submit a valid contact form", "keyword": "Feature", "tags": [{"line": 7, "name": "contact"}, {"line": 7, "name": "submit"}], "line": 8, "description": "", "uri": "pbt/SubmitContact.feature", "id": "pbt/submitcontact.feature"}]